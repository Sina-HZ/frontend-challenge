{"version":3,"sources":["types/user.ts","components/general/Button.tsx","stores/User.ts","pages/Newsletter/Step1.tsx","../sdk/index.js","pages/Newsletter/Step2.tsx","pages/Newsletter/index.tsx"],"names":["newsletterPeriodEnum","useStyle","makeStyles","theme","button","boxShadow","MyButton","props","classes","Button","variant","color","className","children","initialUser","name","age","email","newsletter","weekly","UserStore","types","model","string","enumeration","Object","values","actions","self","update","data","assign","getUser","userObj","clear","create","useStyles","main","height","display","flexDirection","observer","useForm","mode","defaultValues","control","handleSubmit","history","useHistory","newsLetterFieldRules","required","value","message","min","max","pattern","_onSubmit","push","Box","onSubmit","rules","defaultValue","render","field","formState","fieldState","TextField","size","label","fullWidth","helperText","errors","error","inputRef","ref","style","marginTop","inputProps","maxLength","mt","onClick","type","Typography","createUser","user","Promise","resolve","setTimeout","token","alert","backgroundColor","palette","success","light","borderRadius","spacing","padding","actionFooter","justifyContent","useState","loading","setLoading","isSubmited","setSubmited","a","result","console","log","select","MenuItem","daily","monthly","disabled","goBack","Collapse","in","to","alignItems","paper","maxWidth","overflow","breakpoints","down","imageSide","flex","formSide","contentBox","formWraper","lorem","lineHeight","steperBox","width","text","secondary","bgImg","objectFit","objectPosition","Newsletter","search","useLocation","query","queryString","parse","stepOneRule","keys","length","step","stepTwooRule","Paper","elevation","src","alt"],"mappings":"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","file":"static/js/5.479ebd7e.chunk.js","sourcesContent":["export enum newsletterPeriodEnum {\n    daily = 'daily',\n    weekly = 'weekly',\n    monthly = 'monthly'\n}\n\nexport interface IUser {\n    name: string\n    age: number | string\n    email: string\n    newsletter: newsletterPeriodEnum\n}\n","import { Button, ButtonProps, makeStyles, Theme } from \"@material-ui/core\"\n\nconst useStyle = makeStyles((theme: Theme) => ({\n    button: {\n        boxShadow: 'none'\n    }\n}))\n\nconst MyButton: React.FC<ButtonProps> = (props) => {\n    const classes = useStyle();\n\n    return (\n        <Button\n            variant='contained'\n            color='primary'\n            className={classes.button}\n            {...props}\n        >\n            {props.children}\n        </Button>\n    )\n}\n\nexport default MyButton","import { types } from \"mobx-state-tree\"\nimport { newsletterPeriodEnum, IUser } from \"../types/user\"\n\nconst initialUser = {\n    name: '',\n    age: '',\n    email: '',\n    newsletter: newsletterPeriodEnum.weekly\n}\n\nexport const UserModel = types.model('User', {\n    name: types.string,\n    age: types.string,\n    email: types.string,\n    newsletter: types.enumeration<newsletterPeriodEnum>('newsletter', Object.values(newsletterPeriodEnum)),\n}).actions(self => ({\n    update(data: Partial<IUser>) {\n        Object.assign(self, {\n            ...self,\n            ...data\n        })\n    },\n    getUser(){\n        const {age, ...userObj} = self;\n        return {\n            ...userObj,\n            age: +age\n        }\n    },\n    clear(){\n        Object.assign(self, initialUser)\n    }\n}))\n\nconst UserStore = UserModel.create(initialUser);\n\nexport default UserStore","import { Box, makeStyles, TextField, Theme, Typography } from \"@material-ui/core\";\nimport { observer } from \"mobx-react-lite\";\nimport { Controller, SubmitHandler, useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport MyButton from \"../../components/general/Button\";\nimport UserStore from \"../../stores/User\";\nimport { IUser } from \"../../types/user\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    main: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    }\n}))\n\nconst Step1 = () => {\n    const { control, handleSubmit } = useForm<Pick<IUser, 'name' | 'age'>>({\n        mode: \"onSubmit\",\n        defaultValues: {\n            name: UserStore.name,\n            age: UserStore.age\n        },\n    });\n\n    const classes = useStyles();\n    const history = useHistory()\n\n    const newsLetterFieldRules = {\n        name: {\n            required: {\n                value: true,\n                message: 'تکمیل این بخش الزامی است',\n            },\n        },\n        age: {\n            required: {\n                value: true,\n                message: 'تکمیل این بخش الزامی است',\n            },\n            min: {\n                value: 18,\n                message: 'حداقل سن ۱۸ سال است'\n            },\n            max: {\n                value: 99,\n                message: 'حداکثر سن ۹۹ سال است'\n            },\n            pattern: {\n                value: /^[0-9]*$/i,\n                message: 'فقط عدد وارد کنید'\n            }\n        }\n    }\n\n\n    const _onSubmit: SubmitHandler<Pick<IUser, 'name' | 'age'>> = (data: any) => {\n        UserStore.update(data);\n        history.push('/newsletter?step=2', data)\n    }\n\n    return (\n        <Box className={classes.main}>\n            <form onSubmit={handleSubmit(_onSubmit)}>\n                <Box>\n                    <Controller\n                        name=\"name\"\n                        control={control}\n                        rules={newsLetterFieldRules.name}\n                        defaultValue=''\n                        render={({ field, fieldState, formState }) => (\n                            <TextField\n                                color='primary'\n                                variant='outlined'\n                                size='small'\n                                label='نام و نام خانوادگی'\n                                fullWidth\n                                helperText={formState.errors.name?.message}\n                                error={!!formState.errors.name}\n                                inputRef={field.ref}\n                                {...field}\n                            />\n                        )}\n                    />\n                    <Controller\n                        name=\"age\"\n                        control={control}\n                        rules={newsLetterFieldRules.age}\n                        defaultValue=''\n                        render={({ field, fieldState, formState }) => (\n                            <TextField\n                                color='primary'\n                                variant='outlined'\n                                size='small'\n                                label='سن'\n                                fullWidth\n                                style={{ marginTop: 16 }}\n                                inputProps={{ maxLength: 3 }}\n                                helperText={formState.errors.age?.message}\n                                error={!!formState.errors.age}\n                                inputRef={field.ref}\n                                {...field}\n                            />\n                        )}\n                    />\n\n                </Box>\n                <Box mt={3}>\n                    <MyButton onClick={handleSubmit(_onSubmit)} type='submit' >\n                        <Typography>تایید و مرحله بعد</Typography>\n                    </MyButton>\n                </Box>\n            </form>\n        </Box>\n    )\n}\n\nexport default observer(Step1);","export function createUser(user) {\n    return new Promise(resolve => {\n      setTimeout(function() {\n        resolve({ user, token: \"test.token\" });\n      }, 1000);\n    });\n  }","import { Box, Collapse, makeStyles, MenuItem, TextField, Theme, Typography } from \"@material-ui/core\";\nimport { observer } from \"mobx-react-lite\";\nimport { useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport MyButton from \"../../components/general/Button\";\nimport UserStore from \"../../stores/User\";\nimport { IUser, newsletterPeriodEnum } from \"../../types/user\";\nimport { createUser } from 'sdk'\nimport { Controller, SubmitHandler, useForm } from \"react-hook-form\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    main: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    alert: {\n        backgroundColor: theme.palette.success.light,\n        color: theme.palette.success.main,\n        borderRadius: theme.spacing(0.5),\n        padding: theme.spacing(1)\n    },\n    actionFooter: {\n        display: 'flex',\n        marginTop: theme.spacing(3),\n        justifyContent: 'space-between'\n    }\n}))\n\nconst Step2 = () => {\n    const { control, handleSubmit } = useForm<Pick<IUser, 'email' | 'newsletter'>>({\n        mode: \"onSubmit\",\n        defaultValues: {\n            email: UserStore.email,\n            newsletter: UserStore.newsletter\n        },\n    });\n    const [loading, setLoading] = useState(false)\n    const [isSubmited, setSubmited] = useState(false)\n\n    const classes = useStyles()\n    const history = useHistory()\n\n    const _onSubmit: SubmitHandler<Pick<IUser, 'email' | 'newsletter'>> = async (data) => {\n        try {\n            setLoading(true);\n            UserStore.update(data);\n            const result = await createUser(UserStore.getUser());\n            console.log(result);\n            setLoading(false)\n            setSubmited(true)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const _onBackHandler = () => {\n        history.goBack()\n    }\n\n    const newsLetterFieldRules = {\n        email: {\n            required: {\n                value: true,\n                message: 'تکمیل این بخش الزامی است',\n            },\n            pattern: {\n                /* eslint-disable */\n                value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: 'ایمیل وارد شده صحیح نمی باشد'\n            }\n        },\n        newsletter: {\n            required: {\n                value: true,\n                message: 'تکمیل این بخش الزامی است',\n            },\n        }\n    }\n\n    if (!UserStore.name || !UserStore.age) {\n        return (\n            <Redirect to='/newsletter' />\n        )\n    }\n\n    return (\n        <Box className={classes.main}>\n            <form onSubmit={handleSubmit(_onSubmit)}>\n                <Box>\n                    <Controller\n                        name=\"email\"\n                        control={control}\n                        rules={newsLetterFieldRules.email}\n                        defaultValue=''\n                        render={({ field, fieldState, formState }) => (\n                            <TextField\n                                color='primary'\n                                variant='outlined'\n                                size='small'\n                                label='ایمیل'\n                                fullWidth\n                                helperText={formState.errors.email?.message}\n                                error={!!formState.errors.email}\n                                inputRef={field.ref}\n                                {...field}\n                            />\n                        )}\n                    />\n                    <Controller\n                        name=\"newsletter\"\n                        control={control}\n                        rules={newsLetterFieldRules.newsletter}\n                        defaultValue={newsletterPeriodEnum.weekly}\n                        render={({ field, fieldState, formState }) => (\n                            <TextField\n                                color='primary'\n                                variant='outlined'\n                                size='small'\n                                label='دوره ارسال'\n                                select\n                                fullWidth\n                                style={{ marginTop: 16 }}\n                                helperText={formState.errors.newsletter?.message}\n                                error={!!formState.errors.newsletter}\n                                inputRef={field.ref}\n                                {...field}\n                            >\n                                <MenuItem value={newsletterPeriodEnum.daily}>روزانه</MenuItem>\n                                <MenuItem value={newsletterPeriodEnum.weekly}>هفتگی</MenuItem>\n                                <MenuItem value={newsletterPeriodEnum.monthly}>ماهانه</MenuItem>\n                            </TextField>\n                        )}\n                    />\n\n                </Box>\n\n                <Box className={classes.actionFooter}>\n                    <MyButton onClick={handleSubmit(_onSubmit)} type='submit' disabled={loading}>\n                        <Typography>ارسال</Typography>\n                    </MyButton>\n                    <MyButton variant='text' onClick={_onBackHandler} disabled={loading}>\n                        <Typography>بازگشت</Typography>\n                    </MyButton>\n                    <Collapse in={isSubmited} >\n                        <Box className={classes.alert}>\n                            <Typography color='inherit' variant='body2'>{`درخواست شما با موفقیت ثبت شد`}</Typography>\n                        </Box>\n                    </Collapse>\n                </Box>\n\n            </form>\n        </Box>\n    )\n}\n\nexport default observer(Step2);","import { Box, makeStyles, Paper, Theme, Typography } from \"@material-ui/core\"\nimport { useLocation } from \"react-router-dom\";\nimport queryString from 'query-string'\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\n\nconst lorem = `لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم از صنعت چاپ، و با استفاده از طراحان گرافیک است، چاپگرها و متون بلکه روزنامه و مجله در ستون و سطرآنچنان که لازم است، و برای شرایط فعلی تکنولوژی مورد نیاز، و کاربردهای متنوع با هدف بهبود ابزارهای کاربردی می باشد، کتابهای زیادی در شصت و سه درصد گذشته حال و آینده، شناخت فراوان جامعه و متخصصان را می طلبد، تا با نرم افزارها شناخت بیشتری را برای طراحان رایانه ای علی الخصوص طراحان خلاقی، و فرهنگ پیشرو در زبان فارسی ایجاد کرد.`\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    main: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100vh',\n        padding: theme.spacing(3)\n    },\n    paper: {\n        maxWidth: 690,\n        overflow: 'hidden',\n        height: 500,\n        display: 'flex',\n        [theme.breakpoints.down('xs')]: {\n            height: '100%',\n        }\n    },\n    imageSide: {\n        flex: 2,\n        backgroundColor: '#dedede',\n        [theme.breakpoints.down('xs')]: {\n            display: 'none'\n        }\n    },\n    formSide: {\n        padding: theme.spacing(3),\n        flex: 2.5,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly'\n    },\n    contentBox: {\n        flex: 3\n    },\n    formWraper: {\n        flex: 2\n    },\n    lorem: {\n        lineHeight: 1.8\n    },\n    steperBox: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(1, 2),\n        maxWidth: 690,\n        width: '100%',\n        '& span': {\n            color: theme.palette.text.secondary\n        }\n    },\n    bgImg: {\n        width: '100%', \n        height: '100%', \n        display: 'block', \n        objectFit: 'cover', \n        objectPosition: 'top center'\n    }\n}))\n\nconst Newsletter: React.FC = (props) => {\n    const { search } = useLocation();\n    const query: { step?: string } = queryString.parse(search);\n    const classes = useStyles()\n\n    const stepOneRule = !Object.keys(query).length || query?.step === '1';\n    const stepTwooRule = query && query?.step === '2';\n    const totalStep = '2';\n\n    return (\n        <Box className={classes.main}>\n            <Paper elevation={1} className={classes.paper}>\n                <Box className={classes.formSide}>\n                    <Box className={classes.contentBox}>\n                        <Typography variant='h6' >عضویت در خبرنامه</Typography>\n                        <Typography variant='body2' className={classes.lorem}>{lorem}</Typography>\n                    </Box>\n\n                    <Box className={classes.formWraper}>\n                        {stepOneRule && <Step1 />}\n                        {stepTwooRule && <Step2 />}\n                    </Box>\n\n                </Box>\n                <Box className={classes.imageSide}>\n                    <img src={'/frontend-challenge/assets/images/bg-newsletter.jpg'} alt='form bg' className={classes.bgImg} />\n                </Box>\n            </Paper>\n\n            <Box className={classes.steperBox}>\n                <Typography variant='caption'>{`صفحه ${stepOneRule ? '1' : '2'} از ${totalStep}`}</Typography>\n            </Box>\n\n        </Box>\n    )\n}\n\nexport default Newsletter"],"sourceRoot":""}